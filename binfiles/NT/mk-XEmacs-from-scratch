#!/usr/bin/env zsh

# Build XEmacs versions (21.4 and 21.5, both native and cygwin).
# The native versions are not installed, but the cygwin versions
# are installed to /usr/local/xemacs-21.x-$(today).
# All kits reference packages installed under e:/XEmacs

emulate -LR zsh
progname=${0:t}

function usage {
  print -u2 "\
usage: $progname [-h|--help] [--intel] [--libs] <21.4|21.5*>
       -h|--help            print this help message and exit
       --intel              use the intel compiler
       --libs               build the support libs (probably doesn't work)
       21.4                 build a 21.4 XEmacs kit from SCM
       21.5*                build some type of 21.5 XEmacs kit from SCM"
}


zparseopts -D h=help -help=help -intel=with_intel -libs=build_libs

if [[ -n $help ]]; then
  usage
  exit 0
fi

# Optional '--libs' argument means to build the libraries.
# This probably doesn't work.
[[ -n $build_libs ]] && mk-xemacs-support-libs

[[ -n $with_intel ]] && with_intel="--intel"

# The default is to build both 21.4 and 21.5
(( $# == 0 )) && set 21.4 21.5

# The version is based on the date.
# Capture that information now in case we're crossing midnight.
export VERSION=$(today)

#: ${shortcut_dir:="$(cygpath $USERPROFILE)/Application Data/Microsoft/Internet Explorer/Quick Launch/XEmacs Versions"}
: ${shortcut_dir:="$(cygpath $USERPROFILE)/desktop/XEmacs"}

for ver in $*; do
  case $ver in
  (21.4)

    # Make but don't install a native version.
    # We'll run it from the source directory.
    print "Building XEmacs $ver native"
    MakeNativeXEmacs --without-debug --package-root=e:/XEmacs $with_intel 21.4

    # Make and install a cygwin version and make it the default.
    print "Building XEmacs $ver cygwin"
    mkdir ../build >& /dev/null
    pushd ../build
    MakeCygwinXEmacs xemacs-$ver-$VERSION t
    popd

    # Make shortcuts.
    pushd $shortcut_dir
    mkshortcut --desc="XEmacs $ver (native) $VERSION" --icon=/bin/run.exe --iconoffset=1 --name="XEmacs-$ver $VERSION (native)" --workingdir=$HOME $OLDPWD/xemacs-$ver-$VERSION/src/xemacs.exe
    mkshortcut --desc="XEmacs $ver (cygwin) $VERSION" --icon=/bin/run.exe --iconoffset=1  --arguments="$(ls /usr/local/xemacs-$ver-$VERSION/bin/xemacs-*.exe)" --name="XEmacs-$ver $VERSION (cygwin)" --workingdir=$HOME /bin/run.exe
    popd
    ;;

  (21.5*)

    # Make but don't install a native version.
    # We'll run it from the source directory.
    print "Building XEmacs $ver native"
    MakeNativeXEmacs --with-mule --package-root=e:/XEmacs $with_intel $ver

    # Make and install a cygwin version
    print "Building XEmacs $ver cygwin"
    mkdir ../build >& /dev/null
    pushd ../build
    MakeCygwinXEmacs xemacs-$ver-$VERSION
    popd

    # Make shortcuts.
    pushd $shortcut_dir
    mkshortcut --desc="XEmacs $ver (native, mule) $VERSION" --icon=/bin/run.exe --iconoffset=1 --name="XEmacs-$ver $VERSION (native)" --workingdir=$HOME $OLDPWD/xemacs-$ver-$VERSION/src/xemacs.exe
    mkshortcut --desc="XEmacs $ver (cygwin, mule) $VERSION" --icon=/bin/run.exe --iconoffset=1  --arguments="$(ls /usr/local/xemacs-$ver-$VERSION-mule/bin/xemacs-*.exe)" --name="XEmacs-$ver $VERSION (cygwin)" --workingdir=$HOME /bin/run.exe
    popd
    ;;

  (*)
      print -u2 "$progname: illegal version \"$ver\" specified."
      ;;
  esac
done

# Local Variables:
# mode: ksh
# sh-indentation: 2
# indent-tabs-mode: nil
# End:
