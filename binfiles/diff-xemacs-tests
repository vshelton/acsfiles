#!/bin/sh

# Compare the test results from 2 different versions of XEmacs.
# Usage: diff-xemacs-results [-45adhmn] [date1] [date2]
#        -4 - Version 21.4 (default)
#        -5 - Verstion 21.5
#        -a - Diff all of: debug, mule and normal builds
#        -d - Diff debug build
#        -h - Print this help message
#        -m - Diff mule build
#        -n - Diff normal build (default)
#        If no date1 is specified, the default is $(yesterday)
#        If no date2 is specified, the default is $(today)

# Execute this script under the Z shell
[ ! -n "$ZSH_VERSION" ] && exec zsh "$0" ${1+"$@"}

progname=${0:t}

usage()
{
  print -u2 "usage: $progname [-45adhmn] [date1] [date2]
       -4 - Version 21.4 (default)
       -5 - Verstion 21.5
       -a - Diff all of: debug, mule and normal builds
       -d - Diff debug build
       -h - Print this help message
       -m - Diff mule build
       -n - Diff normal build (default)
       The default date1 is \$(yesterday)
       The default date2 is \$(today)"
}

zparseopts -D 4=v 5=v a+=types d+=types h=help m+=types n+=types

if [[ -n $help ]];
then
  usage
  exit 0
fi

# all_types specifies the list of all types (normal, debug and mule) to compare
# the default is to compare only the test results for the normal build
[[ -z $types || $types == *-n* ]] && all_types=('')
[[ $types == *-d* ]] && all_types[$#all_types+1]=-debug
[[ $types == *-m* ]] && all_types[$#all_types+1]=-mule

# -a means to compare all types: normal, debug and mule
[[ $types == *-a* ]] && all_types=('' -debug -mule)

# If no dates are specified, the defaults are yesterday and today
first=${1:-$(yesterday)}
second=${2:-$(today)}

# The default version is 21.4, but this gets ignored if the
# date string is something like 21.4.16
ver=21.4
[[ $v == -5 ]] && ver=21.5

# Special case versions like 21.4.16
dir1=xemacs-$ver-$first
[[ $first == 2[12].(?|??).(?|??) ]] && dir1=xemacs-$first
dir2=xemacs-$ver-$second
[[ $second == 2[12].(?|??).(?|??) ]] && dir2=xemacs-$second

# Diff the test results for all the requested build types
for i in {1..$#all_types}
do
  type=$all_types[$i]
  diff --unified=0 --label $dir1$type $BLDROOT/$dir1$type/check.out --label $dir2$type =(perl -p -e "s/$second/$first/g" < $BLDROOT/$dir2$type/check.out)
  diffstat=$?
  (( $diffstat != 0 )) && (( $i != $#all_types )) && print "\n"
done

exit $diffstat

# Local Variables:
# mode: ksh
# sh-indentation: 2
# indent-tabs-mode: nil
# End:
