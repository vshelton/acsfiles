#!/usr/bin/env zsh

# Compare the test results from 2 different versions of XEmacs.
# Usage: diff-xemacs-results [-45adhmn] [date1] [date2]
#        -4 - Version 21.4 (default)
#        -5 - Verstion 21.5
#        -a - Diff all of: debug, mule and normal builds
#        -d - Diff debug build
#        -h - Print this help message
#        -m - Diff mule build
#        -n - Diff normal build (default)
#        If no date1 is specified, the default is $(yesterday)
#        If no date2 is specified, the default is $(today)

emulate -LR zsh
progname=${0:t}

usage()
{
  print -u2 "usage: $progname [-45adhmn] [date1] [date2]
       -4 - Version 21.4 (default)
       -5 - Verstion 21.5
       -a - Diff all of: debug, mule and normal builds
       -d - Diff debug build
       -h - Print this help message
       -m - Diff mule build
       -n - Diff normal build (default)
       The default date1 is \$(yesterday)
       The default date2 is \$(today)"
}

# Compare the files
# $1 - version name ("21.4" or "21.5")
# $2 - directory suffix ("-debug" or "-mule", for example)
# $3 - date1
# $4 - date2
function compare_files {

  # Special case versions like "21.4.16"
  dir1=xemacs-${1}-$3
  [[ $3 == 2[12].(?|??).(?|??) ]] && dir1=xemacs-$3
  dir2=xemacs-${1}-$4
  [[ $4 == 2[12].(?|??).(?|??) ]] && dir2=xemacs-$4

  # Add directory suffixes
  dir1=${dir1}${2}
  dir2=${dir2}${2}

  diff --unified=0 --label $dir1 $BLDROOT/$dir1/check.out --label $dir2 =(perl -p -e "s/$4/$3/g" < $BLDROOT/$dir2/check.out)
}

zparseopts -D 4=v 5=v a=all d=debug h=help m=mule n=normal

if [[ -n $help ]]; then
  usage
  exit 0
fi

# Compare the test results for the normal build by default
[[ -z $mule && -z $debug ]] && normal=( "-n" )

# If no dates are specified, the defaults are yesterday and today
first=${1:-$(yesterday)}
second=${2:-$(today)}

# The default version is 21.4, but this gets ignored if the
# date string is something like 21.4.16
ver=21.4
[[ $v == -5 ]] && ver=21.5

[[ -n $normal || -n $all ]] && compare_files $ver "" $first $second
[[ -n $debug || -n $all ]] && compare_files $ver "-debug" $first $second
[[ -n $mule || -n $all ]] && compare_files $ver "-mule" $first $second

# Local Variables:
# mode: shell-script
# sh-indentation: 2
# indent-tabs-mode: nil
# End:
