#!/usr/bin/env zsh

# Make FSF/GNU emacs either from CVS or from an unpacked tarball.
# Usage: mk-emacs [version] [cfg_opts],
# where version is either blank to refer to CVS
# or the name of a source package already unpacked in $SRCROOT.
# cfg_opts refers to emacs-specific configuration options, like
# --without-xim or --with-x-toolkit=lucid

emulate -LR zsh
progname=${0:t}

: ${USRLOCAL:=/usr/local}

function usage() {
  print -u2 "\
usage: $progname [-h|--help] [emacs_version] [configure_args]
       -h|--help - Print this help message"
}

zparseopts -D h=help -help=help

if [[ -n $help ]]; then
  usage
  exit 0
fi

# Default is to build from source control
if [[ $# == 0 ]]; then

  # If a specific version is specified, assume we're trying something
  # specific out and rebuild even if the sources have not changed.
  force=
  [[ -n $VERSION ]] && force="--force"
  if ! srcdir=$( GetSource --update $force emacs ) ; then
    print -u2 $progname: Could not get emacs source from bzr.
    exit 1
  fi
else
  if ! srcdir=$( GetSource $* ) ; then
    print -u2 $progname: Could not get source for \"$*\"
    exit 1
  fi
fi

# Set compiler options based on OS version
case $(uname -a) in
(SunOS*)
  cf=${CFLAGS:--O2 -pipe -ffast-math -fno-exceptions}
  ;;
(*x86*)
  # -m64 -O3 -march=native -funroll-loops
  #   and
  # -m64 -Ofast -flto -march=native
  # exhibit a strange flashing display bug after scrolling
  cf=${CFLAGS:--m64 -O -march=native}
  ;;
esac

cd $srcdir
ever=${PWD:t}
./autogen.sh >& autogen.out
mkdir $BLDROOT/$ever
cd  $BLDROOT/$ever

# Configure and build emacs
if CFLAGS="$cf" $srcdir/configure                                            \
       --prefix=$USRLOCAL/$ever                                              \
       --without-{m17n-flt,imagemagick,selinux,compress-install} >& conf.out \
    && make bootstrap >& mk.out                                              \
    && make install >& inst.out ; then

    new_default -v emacs
else
  # Report the last errors observed
  tail -n 10 inst.out 2>/dev/null                               \
    || tail -n 10 mk.out 2>/dev/null                            \
    || tail -n 10 conf.out 2>/dev/null                          \
    || print -u2 "Configure, make or install of emacs failed."
fi

# Local Variables:
# mode: shell-script
# sh-indentation: 2
# indent-tabs-mode: nil
# End:
