#!/usr/bin/env zsh

# This is a generic build script to download the latest source code and
# build a new version of software.  Link this to "mk-exa" or "mk-perl", etc.

: ${USRLOCAL:=/usr/local}
: ${BLDROOT:=$USRLOCAL/build}

install=
snapshot=
zparseopts -E -D i=install -install=install s=snapshot -snapshot=snapshot

# Strip "mk-" from the command name in order to get the package name.
progname=${0:t}
pkgname=${progname:s/mk-/}
scm_opts=( --update $* )

# Nowadays it's hard to separate the source directory
# from the build directory, so we'll build in the source directory.
srcdir=$(GetSource $scm_opts $pkgname) || exit $?
cd  $srcdir

export PREFIX=$USRLOCAL

# Package-specific stuff
case $pkgname in
(conky)
  cmake -DCMAKE_INSTALL_PREFIX=$USRLOCAL -DBUILD_XDBE=true
  make
  retval=$?
  if (( retval == 0 )) && [[ -n $install ]]; then
    make install
    retval=$?
  fi
  ;;

(exa)
  export ZSHDIR=$USRLOCAL/share/zsh/site-functions
  make -e
  retval=$?
  if (( retval == 0 )) && [[ -n $install ]]; then
    make -e install install-zsh-completions
    retval=$?
  fi
  ;;

(feh)
  export VERSION=$(today)
  make -e
  retval=$?
  if (( retval == 0 )) && [[ -n $install ]]; then
    make -e install
    retval=$?
  fi
  ;;

(perl)
  [[ -n $snapshot ]] && PREFIX=$PREFIX/${PWD:t}
  f=conf.out
  print -n "Configuring $pkgname ... "
  ./Configure -Dprefix=$PREFIX -Dusedevel -Dcf_email=ethersoft@gmail.com -des >& $f
  retval=$?
  print "done."
  if (( retval != 0 )); then
    print -u2 "$progname: configure failed:"
    tail -n 15 $f
    exit $retval
  fi

  # Build.
  print -n "Building $pkgname ... "
  f=mk.out
  make >& $f
  retval=$?
  print "done."
  if (( retval != 0 )); then
    print -u2 "$progname: make failed:"
    tail -n 15 $f
    exit $retval
  fi

  # Test.
  print -n "Testing $pkgname ... "
  f=check.out
  make test >& $f
  retval=$?
  print "done."
  if (( retval != 0 )); then
    print -u2 "$progname: make test failed:"
    tail -n 15 $f
    exit $retval
  fi

  # Install.
  if [[ -n $install ]]; then
    print -n "Installing $pkgname ... "
    f=inst.out
    make install >& $f
    retval=$?
    print "done."
    if (( retval != 0 )); then
      print -u2 "$progname: make install failed:"
      tail -n 15 $f
      exit $retval
    fi
  fi
  ;;

(*)
  print -u2 Unknown package: $pkgname
  retval=1
  ;;
esac

exit $retval

# Local Variables:
# mode: shell-script
# sh-basic-offset: 2
# sh-indentation: 2
# indent-tabs-mode: nil
# End:
