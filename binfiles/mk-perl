#!/usr/bin/env zsh

# This is a generic build script to download the latest source code and
# build a new version of software.  Link this to "mk-exa" or "mk-perl", etc.

: ${USRLOCAL:=/usr/local}
: ${BLDROOT:=$USRLOCAL/build}

install=
snapshot=
zparseopts -D i=install -install=install s=snapshot -snapshot=snapshot

# Strip "mk-" from the command name in order to get the package name.
pkgname=${0:t:s/mk-/}
scm_opts=--update

# Nowadays it's hard to separate the source directory
# from the build directory, hence the --src option below.
cd $(GetSource --src=$BLDROOT $scm_opts $pkgname)

# Package-specific stuff
case $pkgname in
(conky)
  cmake -DCMAKE_INSTALL_PREFIX=$USRLOCAL -DBUILD_XDBE=true
  make
  retval=$?
  if (( retval == 0 )) && [[ -n $install ]]; then
    make install
    retval=$?
  fi
  ;;

(exa)
  export PREFIX=$USRLOCAL ZSHDIR=$USRLOCAL/share/zsh/site-functions
  make -e
  retval=$?
  if (( retval == 0 )) && [[ -n $install ]]; then
    make -e install install-zsh-completions
    retval=$?
  fi
  ;;

(feh)
  export PREFIX=$USRLOCAL VERSION=$(today)
  make -e
  retval=$?
  if (( retval == 0 )) && [[ -n $install ]]; then
    make -e install
    retval=$?
  fi
  ;;

(perl)
  prefix=$USRLOCAL
  [[ -n $snapshot ]] && prefix=$prefix/${PWD:t}
  ./Configure -Dprefix=$prefix -Dusedevel -Dcf_email=ethersoft@gmail.com -des
  make && make test
  retval=$?
  if (( retval == 0 )) && [[ -n $install ]]; then
    make install
    retval=$?
  fi
  ;;

(*)
  print -u2 Unknown package: $pkgname
  retval=1
  ;;
esac

exit $retval

# Local Variables:
# mode: shell-script
# sh-basic-offset: 2
# sh-indentation: 2
# indent-tabs-mode: nil
# End:
