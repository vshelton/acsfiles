#!/usr/bin/env zsh

# Make a source tree from the SCM-based sources of the specified project.

emulate -LR zsh
progname="${0:t}"

: ${USRLOCAL:=/usr/local}
: ${SRCROOT:=$USRLOCAL/src}
: ${SCMROOT:=~/scmroot}

# If no other version name was supplied, the default
# version stamp is based on the current date.
: ${VERSION:=$(today)}

case $# in
(1)     # e.g. mk-src zsh
  project="$1"
  ;;
(2)     # e.g. mk-src zsh vin-save ==> /opt/src/zsh-vin-save
  project="$1"
  VERSION="$2"
  ;;
(*)
  print -u2 "usage: $progname <project> [version]"
  exit 1
  ;;
esac

if ! cd $SCMROOT/$project >&/dev/null; then
  print -u2 "$progname: could not cd to $SCMROOT/$project."
  exit 2
fi

target_dir=$SRCROOT/$project-$VERSION
if [[ -d $target_dir ]]; then
  print -u2 "$progname: $target_dir already exists."
  exit 3
fi

if ! mkdir -p $target_dir >&/dev/null; then
  print -u2 "$progname: could not mkdir $target_dir."
  exit 4
fi
print $target_dir
tar cf - --exclude={CVS,.hg,.svn,.'git*'} . | tar xf - -C $target_dir

# Local Variables:
# mode: shell-script
# sh-indentation: 2
# indent-tabs-mode: nil
# End:
