#!/usr/bin/env zsh

# Make zsh from the latest CVS sources
# Usage: mk-zsh [zsh-version] [configure opts]

emulate -LR zsh
progname=${0:t}

# User-visible and user-overridable variables are all caps
: ${PROJECT:=zsh}
: ${USRLOCAL:=/usr/local}
: ${SRCROOT:=$USRLOCAL/src}
: ${VERSION:=$(today)}

# If either there are no more remaining arguments,
# or if the next argument is a configuration option,
# copy a source snapshot from CVS to the source tree
if [[ $# = 0 ]] || [[ $1 == -* ]]; then
  mk-src $PROJECT $VERSION || exit $?

  TARGET=$PROJECT-$VERSION
  if ! cd $SRCROOT/$TARGET >&/dev/null; then
    print -u2 "$progname: could not cd to $SRCROOT/$TARGET."
    exit 1
  fi

  # Generate a configure script
  if ! ./Util/preconfig; then
    print -u2 "$progname: preconfig failure."
    exit 2
  fi

  # On cygwin, move the process substitution test aside
  [[ $(uname) =~ CYGWIN* ]] && mv Test/D03procsubst{.ztst,-NOT}

# Otherwise, $1 is the name of the already-unpacked source directory
else
  TARGET=$1
  shift
  if ! cd $SRCROOT/$TARGET 2>/dev/null; then
    print -u2 "$progname: could not cd to $SRCROOT/$TARGET."
    exit 1
  fi
fi

# We've changed into the source directory.  Return to the
# starting directory, but remember the source directory in SRCDIR.
SRCDIR=$PWD
cd $OLDPWD

generic_cfg_opts=()

# Default to:
#  --with-tcsetpgrp
#  --enable-zsh-mem everywhere except cygwin
#  --enable-pcre
with_tcsetpgrp="--with-tcsetpgrp"
enable_zsh_mem="--enable-zsh-mem"
[[ $(uname -s) == CYGWIN* ]] && enable_zsh_mem=
enable_pcre="--enable-pcre"

# Support options to configure
while [[ $# -gt 0 ]]
do
  case $1 in
  (--with-tcsetpgrp*)
    with_tcsetpgrp=$1
    ;;
  (--*able-zsh-mem*)
    enable_zsh_mem=$1
    ;;
  (--*able-pcre*)
    enable_pcre=$1
    ;;
  (--*)
    generic_cfg_opts=($generic_cfg_opts $1)
    ;;
  esac
  shift
done

cfg -s -o conf.out $SRCDIR --datadir=$USRLOCAL/share --enable-etcdir=$USRLOCAL/etc $with_tcsetpgrp $enable_zsh_mem $enable_pcre ${=generic_cfg_opts}
err=$?
if (( err != 0 )); then
  print -u2 "$progname: could not configure $PROJECT."
  exit $err
fi

if ! cd $TARGET >&/dev/null; then
  print -u2 "$progname: couldn't cd to $TARGET."
  exit 3
fi

print -n "Building zsh..."
if ! make >& mk.out; then
  print -u2 "$progname: make failed.  See $TARGET/mk.out."
  exit 4
fi
print "done."

# Run tests
print -n "Running tests..."
make -k check >& check.out
print "done."
summarize_zsh_tests check.out
print "Installing package to $USRLOCAL/$TARGET."
if ! make install install.info >& inst.out; then
  print -u2 "$progname: make install failed.  See $TARGET/inst.out."
  exit 5
fi

# Local Variables:
# mode: ksh
# sh-indentation: 2
# indent-tabs-mode: nil
# End:
