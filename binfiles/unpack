#!/usr/bin/env zsh
#
# Unpack a tarball into the source directory.
#
# Usage: unpack generic_package_name

emulate -LR zsh

function cmdError {
  cmd_status=$?
  (( $cmd_status == 0 )) && return 1
  return 0
}

progname=${0:t}

if (( $# != 1 )); then
  print -u2 "Usage: $progname <pkg>"
  print -u2 "       pkg is a stripped package name, like \"gcc\" or \"make\"."
  exit 1
fi
pkgbase=$1

if [[ -z $SRCROOT ]]; then
  print -u2 "$progname: \$SRCROOT is not set, unpacking in current directory."
elif [[ ! -d $SRCROOT ]]; then
  print -u2 "$progname: \$SRCROOT does not exist, unpacking in current directory."
else
  cd $SRCROOT >& /dev/null ||
    print -u2 "$progname: could not cd to \$SRCROOT; unpacking in current directory."
fi

pkgfile=$(findpkg $pkgbase)
if cmdError; then
  # Error already reported
  exit $cmd_status
fi

# This is much easier now that tar knows how to figure
# out what uncompressor to use
tar xf $pkgfile
if cmdError; then
  print -u2 "$progname: error unpacking $pkgfile."
  exit $cmd_status
fi

# Print the package name before leaving
print $PWD/${${${pkgfile:t}%.tar*}%.tgz}

# Local Variables:
# mode: shell-script
# sh-indentation: 2
# indent-tabs-mode: nil
# End:
