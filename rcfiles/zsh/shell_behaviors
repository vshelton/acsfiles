# Define shell behaviors for interactive shells.

# Remove duplicates from common path variables.
# Note the "-g", which is required because this
# script is being sourced through a function.
typeset -gU cdpath fpath

cdpath=($BLDROOT $SRCROOT ${BLDROOT:h} ${SRCROOT:h} $USRLOCAL ~ ..)

typeset -g DIRSTACKSIZE=20
typeset -g FIGNORE='~'
typeset -g WORDCHARS='*?_-[]~=/&;!#$%^(){}<>'

# Capture core files
whence ulimit >/dev/null && ulimit -c unlimited

# Set history-related stuff
histchars=\!,#
integer h=4096
typeset -g HISTSIZE=$((h*2))
typeset -g SAVEHIST=$h
typeset -g HISTFILE=~/.zhistory
setopt histexpiredupsfirst
setopt histignorealldups
setopt histignoredups
setopt histignorespace
setopt histnostore
setopt incappendhistory

# Shell-specific behavior
setopt noalwayslastprompt
setopt autolist
setopt automenu
setopt autoremoveslash
setopt extendedglob
setopt hashcmds
setopt hashdirs
setopt interactivecomments
setopt kshoptionprint
setopt listtypes
setopt markdirs
setopt nohup
setopt noflowcontrol
setopt nolistbeep
setopt nonomatch
setopt notify
setopt nopromptsp 2>/dev/null
setopt pushdignoredups
setopt pushdsilent
setopt rmstarsilent

# Set up the prompt
PROMPT="%2c %w %T%(#.#.); "
PROMPT="%B: $PROMPT%b"
PROMPT2="; "
# Include host name and working directory in window title
if title "$HOST:$PWD"; then
  function chpwd {
    local d=$(print -nD $PWD)
    title "$HOST:$d"
  }
  cd $PWD
fi
if [[ $TERM != emacs ]]; then
  autoload -U promptinit
  promptinit
  prompt bart

  stty -parenb -istrip cs8 clocal erase '^?'
fi

# Local Variables:
# mode: shell-script
# sh-indentation: 2
# indent-tabs-mode: nil
# End:
